<?php

namespace backend\modules\products\controllers;

use backend\controllers\AuthController;
use backend\controllers\CRUDController;
use backend\models\Customer;
use developeruz\db_rbac\behaviors\AccessBehavior;
use Yii;
use backend\models\Product;
use backend\models\search\ProductSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;

/**
 * ProductsController implements the CRUD actions for Product model.
 */
class ProductsController extends CRUDController
{

    public function init()
    {
        $this->beanClass = Product::className();
        $this->beanSearchClass = ProductSearch::className();
        $this->extraAccessParams = [
            'viaTable'     => Customer::TABLE_CUSTOMER_PRODUCT,
            'primaryField' => 'product_id',
            'relateField'  => 'customer_id'
        ];
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * Creates a new Product model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $extraParams = [
            'dropdowns' => Product::getRelatedDropdowns()
        ];
        return parent::actionCreate($extraParams);
    }

    /**
     * Updates an existing Product model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $extraParams = [
            'dropdowns' => Product::getRelatedDropdowns()
        ];
        return parent::actionUpdate($id, false, $extraParams);
    }

    /**
     * @param $id
     * @throws NotFoundHttpException
     */
    public function actionHide($id)
    {
        $model = $this->findModel($id);
        $model->is_active = !$model->is_active;
        $model->save();
        $this->redirect(['index']);
    }
}
